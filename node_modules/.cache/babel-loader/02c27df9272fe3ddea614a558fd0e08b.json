{"ast":null,"code":"import _asyncToGenerator from\"/home/devmir/Trybe/portifolio/recipes-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/devmir/Trybe/portifolio/recipes-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/devmir/Trybe/portifolio/recipes-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useContext}from'react';import{Link}from'react-router-dom';import Card from'../components/Card';import Footer from'../components/Footer';import Header from'../components/Header';import RecipesContext from'../context/RecipesContext';import'../CSS/Explore.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AREAS_LIST_URL='https://www.themealdb.com/api/json/v1/1/list.php?a=list';var MEALS_BY_AREAS_URL='https://www.themealdb.com/api/json/v1/1/filter.php?a=';var TWELVE=12;function FoodsNationalities(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),areas=_useState2[0],setAreas=_useState2[1];var _useContext=useContext(RecipesContext),data=_useContext.data,setData=_useContext.setData,fullFoodAPI=_useContext.fullFoodAPI;useEffect(function(){var getAreasList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,meals;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(AREAS_LIST_URL);case 2:response=_context.sent;_context.next=5;return response.json();case 5:meals=_context.sent;setAreas(meals.meals);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getAreasList(){return _ref.apply(this,arguments);};}();getAreasList();fullFoodAPI();},[fullFoodAPI]);var getMealsByArea=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(nationality){var response,_yield$response$json,meals;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(MEALS_BY_AREAS_URL).concat(nationality));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:_yield$response$json=_context2.sent;meals=_yield$response$json.meals;setData(meals.filter(function(_,index){return index<TWELVE;}));case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function getMealsByArea(_x){return _ref2.apply(this,arguments);};}();var handleSelectArea=function handleSelectArea(nationality){if(nationality==='All'){fullFoodAPI();}else{getMealsByArea(nationality);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{pageTitle:\"Explore Nationalities\",btnSearch:true}),/*#__PURE__*/_jsxs(\"select\",{\"data-testid\":\"explore-by-nationality-dropdown\",onChange:function onChange(e){return handleSelectArea(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"All-option\",children:\"All\"}),areas&&areas.map(function(area){return/*#__PURE__*/_jsx(\"option\",{\"data-testid\":\"\".concat(area.strArea,\"-option\"),children:area.strArea},area.strArea);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"containerRecipes\",children:data&&data.map(function(recipe,index){return/*#__PURE__*/_jsx(Link,{to:\"/foods/\".concat(data[index].idMeal),children:/*#__PURE__*/_jsx(Card,{index:index,infoRecipe:recipe})},index);})}),/*#__PURE__*/_jsx(Footer,{})]});}export default FoodsNationalities;","map":{"version":3,"sources":["/home/devmir/Trybe/portifolio/recipes-app/src/pages/FoodsNationalities.jsx"],"names":["React","useState","useEffect","useContext","Link","Card","Footer","Header","RecipesContext","AREAS_LIST_URL","MEALS_BY_AREAS_URL","TWELVE","FoodsNationalities","areas","setAreas","data","setData","fullFoodAPI","getAreasList","fetch","response","json","meals","getMealsByArea","nationality","filter","_","index","handleSelectArea","e","target","value","map","area","strArea","recipe","idMeal"],"mappings":"gYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,MAAO,oBAAP,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,yDAAvB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,uDAA3B,CACA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CAEA,QAASC,CAAAA,kBAAT,EAA8B,CAC5B,cAA0BX,QAAQ,EAAlC,wCAAOY,KAAP,eAAcC,QAAd,eACA,gBAAuCX,UAAU,CAACK,cAAD,CAAjD,CAAQO,IAAR,aAAQA,IAAR,CAAcC,OAAd,aAAcA,OAAd,CAAuBC,WAAvB,aAAuBA,WAAvB,CAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,YAAY,0FAAG,4KACIC,CAAAA,KAAK,CAACV,cAAD,CADT,QACbW,QADa,qCAECA,CAAAA,QAAQ,CAACC,IAAT,EAFD,QAEbC,KAFa,eAGnBR,QAAQ,CAACQ,KAAK,CAACA,KAAP,CAAR,CAHmB,sDAAH,kBAAZJ,CAAAA,YAAY,0CAAlB,CAKAA,YAAY,GACZD,WAAW,GACZ,CARQ,CAQN,CAACA,WAAD,CARM,CAAT,CAUA,GAAMM,CAAAA,cAAc,2FAAG,kBAAOC,WAAP,qLACEL,CAAAA,KAAK,WAAIT,kBAAJ,SAAyBc,WAAzB,EADP,QACfJ,QADe,uCAEGA,CAAAA,QAAQ,CAACC,IAAT,EAFH,4CAEbC,KAFa,sBAEbA,KAFa,CAGrBN,OAAO,CAACM,KAAK,CAACG,MAAN,CAAa,SAACC,CAAD,CAAIC,KAAJ,QAAcA,CAAAA,KAAK,CAAGhB,MAAtB,EAAb,CAAD,CAAP,CAHqB,wDAAH,kBAAdY,CAAAA,cAAc,6CAApB,CAMA,GAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,WAAD,CAAiB,CACxC,GAAIA,WAAW,GAAK,KAApB,CAA2B,CACzBP,WAAW,GACZ,CAFD,IAEO,CACLM,cAAc,CAACC,WAAD,CAAd,CACD,CACF,CAND,CAQA,mBACE,oCACE,KAAC,MAAD,EAAQ,SAAS,CAAC,uBAAlB,CAA0C,SAAS,KAAnD,EADF,cAEE,gBACE,cAAY,iCADd,CAEE,QAAQ,CAAG,kBAACK,CAAD,QAAOD,CAAAA,gBAAgB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAFb,wBAIE,eAAQ,cAAY,YAApB,iBAJF,CAKGlB,KAAK,EACDA,KAAK,CAACmB,GAAN,CAAU,SAACC,IAAD,qBACX,eAEE,wBAAiBA,IAAI,CAACC,OAAtB,WAFF,UAIGD,IAAI,CAACC,OAJR,EACQD,IAAI,CAACC,OADb,CADW,EAAV,CANP,GAFF,cAgBE,YAAK,SAAS,CAAC,kBAAf,UACGnB,IAAI,EACHA,IAAI,CAACiB,GAAL,CAAS,SAACG,MAAD,CAASR,KAAT,qBACP,KAAC,IAAD,EACE,EAAE,kBAAaZ,IAAI,CAACY,KAAD,CAAJ,CAAYS,MAAzB,CADJ,uBAIE,KAAC,IAAD,EACE,KAAK,CAAGT,KADV,CAEE,UAAU,CAAGQ,MAFf,EAJF,EAEQR,KAFR,CADO,EAAT,CAFJ,EAhBF,cA+BE,KAAC,MAAD,IA/BF,GADF,CAmCD,CAED,cAAef,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport '../CSS/Explore.css';\n\nconst AREAS_LIST_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nconst MEALS_BY_AREAS_URL = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\nconst TWELVE = 12;\n\nfunction FoodsNationalities() {\n  const [areas, setAreas] = useState();\n  const { data, setData, fullFoodAPI } = useContext(RecipesContext);\n\n  useEffect(() => {\n    const getAreasList = async () => {\n      const response = await fetch(AREAS_LIST_URL);\n      const meals = await response.json();\n      setAreas(meals.meals);\n    };\n    getAreasList();\n    fullFoodAPI();\n  }, [fullFoodAPI]);\n\n  const getMealsByArea = async (nationality) => {\n    const response = await fetch(`${MEALS_BY_AREAS_URL}${nationality}`);\n    const { meals } = await response.json();\n    setData(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const handleSelectArea = (nationality) => {\n    if (nationality === 'All') {\n      fullFoodAPI();\n    } else {\n      getMealsByArea(nationality);\n    }\n  };\n\n  return (\n    <div>\n      <Header pageTitle=\"Explore Nationalities\" btnSearch />\n      <select\n        data-testid=\"explore-by-nationality-dropdown\"\n        onChange={ (e) => handleSelectArea(e.target.value) }\n      >\n        <option data-testid=\"All-option\">All</option>\n        {areas\n          && areas.map((area) => (\n            <option\n              key={ area.strArea }\n              data-testid={ `${area.strArea}-option` }\n            >\n              {area.strArea}\n            </option>))}\n      </select>\n      <div className=\"containerRecipes\">\n        {data && (\n          data.map((recipe, index) => (\n            <Link\n              to={ `/foods/${data[index].idMeal}` }\n              key={ index }\n            >\n              <Card\n                index={ index }\n                infoRecipe={ recipe }\n              />\n            </Link>\n          ))\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FoodsNationalities;\n"]},"metadata":{},"sourceType":"module"}