{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/FoodsNationalities.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport '../CSS/Explore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AREAS_LIST_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nconst MEALS_BY_AREAS_URL = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\nconst TWELVE = 12;\n\nfunction FoodsNationalities() {\n  _s();\n\n  const [areas, setAreas] = useState();\n  const {\n    data,\n    setData,\n    fullFoodAPI\n  } = useContext(RecipesContext);\n  useEffect(() => {\n    const getAreasList = async () => {\n      const response = await fetch(AREAS_LIST_URL);\n      const meals = await response.json();\n      setAreas(meals.meals);\n    };\n\n    getAreasList();\n    fullFoodAPI();\n  }, [fullFoodAPI]);\n\n  const getMealsByArea = async nationality => {\n    const response = await fetch(`${MEALS_BY_AREAS_URL}${nationality}`);\n    const {\n      meals\n    } = await response.json();\n    setData(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const handleSelectArea = nationality => {\n    if (nationality === 'All') {\n      fullFoodAPI();\n    } else {\n      getMealsByArea(nationality);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageTitle: \"Explore Nationalities\",\n      btnSearch: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      \"data-testid\": \"explore-by-nationality-dropdown\",\n      onChange: e => handleSelectArea(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        \"data-testid\": \"All-option\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), areas && areas.map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n        \"data-testid\": `${area.strArea}-option`,\n        children: area.strArea\n      }, area.strArea, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerRecipes\",\n      children: data && data.map((recipe, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/foods/${data[index].idMeal}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          index: index,\n          infoRecipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FoodsNationalities, \"K2bkAbJoTFsKzQqdQfROi9O9jC8=\");\n\n_c = FoodsNationalities;\nexport default FoodsNationalities;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodsNationalities\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/FoodsNationalities.jsx"],"names":["React","useState","useEffect","useContext","Link","Card","Footer","Header","RecipesContext","AREAS_LIST_URL","MEALS_BY_AREAS_URL","TWELVE","FoodsNationalities","areas","setAreas","data","setData","fullFoodAPI","getAreasList","response","fetch","meals","json","getMealsByArea","nationality","filter","_","index","handleSelectArea","e","target","value","map","area","strArea","recipe","idMeal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport '../CSS/Explore.css';\n\nconst AREAS_LIST_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?a=list';\nconst MEALS_BY_AREAS_URL = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\nconst TWELVE = 12;\n\nfunction FoodsNationalities() {\n  const [areas, setAreas] = useState();\n  const { data, setData, fullFoodAPI } = useContext(RecipesContext);\n\n  useEffect(() => {\n    const getAreasList = async () => {\n      const response = await fetch(AREAS_LIST_URL);\n      const meals = await response.json();\n      setAreas(meals.meals);\n    };\n    getAreasList();\n    fullFoodAPI();\n  }, [fullFoodAPI]);\n\n  const getMealsByArea = async (nationality) => {\n    const response = await fetch(`${MEALS_BY_AREAS_URL}${nationality}`);\n    const { meals } = await response.json();\n    setData(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const handleSelectArea = (nationality) => {\n    if (nationality === 'All') {\n      fullFoodAPI();\n    } else {\n      getMealsByArea(nationality);\n    }\n  };\n\n  return (\n    <div>\n      <Header pageTitle=\"Explore Nationalities\" btnSearch />\n      <select\n        data-testid=\"explore-by-nationality-dropdown\"\n        onChange={ (e) => handleSelectArea(e.target.value) }\n      >\n        <option data-testid=\"All-option\">All</option>\n        {areas\n          && areas.map((area) => (\n            <option\n              key={ area.strArea }\n              data-testid={ `${area.strArea}-option` }\n            >\n              {area.strArea}\n            </option>))}\n      </select>\n      <div className=\"containerRecipes\">\n        {data && (\n          data.map((recipe, index) => (\n            <Link\n              to={ `/foods/${data[index].idMeal}` }\n              key={ index }\n            >\n              <Card\n                index={ index }\n                infoRecipe={ recipe }\n              />\n            </Link>\n          ))\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FoodsNationalities;\n"]},"metadata":{},"sourceType":"module"}