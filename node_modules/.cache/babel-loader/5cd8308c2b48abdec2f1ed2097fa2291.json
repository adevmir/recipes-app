{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/context/RecipesProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipesProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState();\n  const [apiFilter, setApiFilter] = useState();\n  const max = 12; // requisição FOOD primeiro render\n  // const foodAPI = async () => {\n  //   const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  //   const { meals } = await fetch(url)\n  //     .then((response) => response.json());\n  //   setData(meals);\n  //   console.log(data);\n  // };\n  // requisicao com filtro FOOD\n\n  const foodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/';\n    const {\n      meals\n    } = await fetch(`${url}${searchFilter}`).then(response => response.json());\n    setData(meals.splice(0, max));\n  }, [searchFilter]); // requisicao com filtro DRINK\n\n  const drinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/';\n    const {\n      drinks\n    } = await fetch(`${url}${searchFilter}`).then(response => response.json());\n    setData(drinks.splice(0, max));\n  }, [searchFilter]);\n  useEffect(() => {\n    if (searchFilter) {\n      if (apiFilter === 'Foods') {\n        foodAPI();\n      } else if (apiFilter === 'Drinks') {\n        drinkAPI();\n      }\n    } else {\n      console.log(`estamos na pagina ${apiFilter}`);\n    }\n  }, [apiFilter, searchFilter, foodAPI, drinkAPI]);\n  const contextValue = {\n    data,\n    setData,\n    searchFilter,\n    setSearchFilter,\n    apiFilter,\n    setApiFilter\n  };\n  return /*#__PURE__*/_jsxDEV(RecipesContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipesProvider, \"LjLP38fiphcgusvmPqi4tkqH13g=\");\n\n_c = RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesProvider\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/context/RecipesProvider.js"],"names":["React","useCallback","useEffect","useState","PropTypes","RecipesContext","RecipesProvider","children","data","setData","searchFilter","setSearchFilter","apiFilter","setApiFilter","max","foodAPI","url","meals","fetch","then","response","json","splice","drinkAPI","drinks","console","log","contextValue","propTypes","node","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,eAAT,OAAuC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAMW,GAAG,GAAG,EAAZ,CAJqC,CAKrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,OAAO,GAAGd,WAAW,CAAC,YAAY;AACtC,UAAMe,GAAG,GAAG,0CAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,MAAMC,KAAK,CAAE,GAAEF,GAAI,GAAEN,YAAa,EAAvB,CAAL,CACrBS,IADqB,CACfC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADE,CAAxB;AAEAZ,IAAAA,OAAO,CAACQ,KAAK,CAACK,MAAN,CAAa,CAAb,EAAgBR,GAAhB,CAAD,CAAP;AACD,GAL0B,EAKxB,CAACJ,YAAD,CALwB,CAA3B,CAfqC,CAsBrC;;AACA,QAAMa,QAAQ,GAAGtB,WAAW,CAAC,YAAY;AACvC,UAAMe,GAAG,GAAG,8CAAZ;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAa,MAAMN,KAAK,CAAE,GAAEF,GAAI,GAAEN,YAAa,EAAvB,CAAL,CACtBS,IADsB,CAChBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADG,CAAzB;AAEAZ,IAAAA,OAAO,CAACe,MAAM,CAACF,MAAP,CAAc,CAAd,EAAiBR,GAAjB,CAAD,CAAP;AACD,GAL2B,EAKzB,CAACJ,YAAD,CALyB,CAA5B;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,YAAJ,EAAkB;AAChB,UAAIE,SAAS,KAAK,OAAlB,EAA2B;AACzBG,QAAAA,OAAO;AACR,OAFD,MAEO,IAAIH,SAAS,KAAK,QAAlB,EAA4B;AACjCW,QAAAA,QAAQ;AACT;AACF,KAND,MAMO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBd,SAAU,EAA3C;AACD;AACF,GAVQ,EAUN,CAACA,SAAD,EAAYF,YAAZ,EAA0BK,OAA1B,EAAmCQ,QAAnC,CAVM,CAAT;AAYA,QAAMI,YAAY,GAAG;AACnBnB,IAAAA,IADmB;AAEnBC,IAAAA,OAFmB;AAGnBC,IAAAA,YAHmB;AAInBC,IAAAA,eAJmB;AAKnBC,IAAAA,SALmB;AAMnBC,IAAAA;AANmB,GAArB;AASA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGc,YAAjC;AAAA,cACIpB;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxDQD,e;;KAAAA,e;AA0DTA,eAAe,CAACsB,SAAhB,GAA4B;AAC1BrB,EAAAA,QAAQ,EAAEH,SAAS,CAACyB,IAAV,CAAeC;AADC,CAA5B;AAIA,eAAexB,eAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\n\nfunction RecipesProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState();\n  const [apiFilter, setApiFilter] = useState();\n  const max = 12;\n  // requisição FOOD primeiro render\n  // const foodAPI = async () => {\n  //   const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  //   const { meals } = await fetch(url)\n  //     .then((response) => response.json());\n  //   setData(meals);\n  //   console.log(data);\n  // };\n\n  // requisicao com filtro FOOD\n  const foodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/';\n    const { meals } = await fetch(`${url}${searchFilter}`)\n      .then((response) => response.json());\n    setData(meals.splice(0, max));\n  }, [searchFilter]);\n\n  // requisicao com filtro DRINK\n  const drinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/';\n    const { drinks } = await fetch(`${url}${searchFilter}`)\n      .then((response) => response.json());\n    setData(drinks.splice(0, max));\n  }, [searchFilter]);\n\n  useEffect(() => {\n    if (searchFilter) {\n      if (apiFilter === 'Foods') {\n        foodAPI();\n      } else if (apiFilter === 'Drinks') {\n        drinkAPI();\n      }\n    } else {\n      console.log(`estamos na pagina ${apiFilter}`);\n    }\n  }, [apiFilter, searchFilter, foodAPI, drinkAPI]);\n\n  const contextValue = {\n    data,\n    setData,\n    searchFilter,\n    setSearchFilter,\n    apiFilter,\n    setApiFilter,\n  };\n\n  return (\n    <RecipesContext.Provider value={ contextValue }>\n      { children }\n    </RecipesContext.Provider>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}