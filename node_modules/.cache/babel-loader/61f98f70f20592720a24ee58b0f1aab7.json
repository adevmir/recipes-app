{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/portifolio/recipes-app/src/context/RecipesProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxRecipes = 12;\nconst maxCategory = 5;\nconst messageError = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nfunction RecipesProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [data, setData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState();\n  const [apiFilter, setApiFilter] = useState();\n  const [detail, setDetail] = useState();\n  const [category, setCategory] = useState();\n  const [email, setEmail] = useState('');\n  const [shareMessage, setShareMessage] = useState('');\n  const [favStatus, setFavStatus] = useState('');\n  const [localData, setLocalData] = useState();\n  const [favoriteRecipes, setFavoriteRecipes] = useState(JSON.parse(localStorage.getItem('favoriteRecipes')) || []); // Filtro de botões de FOODS\n\n  const foodAPICategory = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const {\n      meals\n    } = await fetch(url).then(response => response.json());\n    setCategory(meals.slice(0, maxCategory));\n  }, []); // requisição FOOD primeiro render\n\n  const fullFoodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const {\n      meals\n    } = await fetch(url).then(response => response.json());\n    setData(meals.slice(0, maxRecipes));\n    setLocalData(meals.slice(0, maxRecipes));\n  }, []); // requisicao com filtro FOOD\n\n  const foodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/';\n    const {\n      meals\n    } = await fetch(`${url}${searchFilter}`).then(response => response.json());\n\n    if (meals === null) {\n      global.alert(messageError);\n    } else {\n      setData(meals.slice(0, maxRecipes));\n    }\n  }, [searchFilter]); // Filtro de botões de DRINKS\n\n  const drinksAPICategory = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const {\n      drinks\n    } = await fetch(url).then(response => response.json());\n    setCategory(drinks.slice(0, maxCategory));\n  }, []); // requisição DRINK primeiro render\n\n  const fullDrinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const {\n      drinks\n    } = await fetch(url).then(response => response.json());\n    setData(drinks.slice(0, maxRecipes));\n    setLocalData(drinks.slice(0, maxRecipes));\n  }, []); // requisicao com filtro DRINK\n\n  const drinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/';\n    const {\n      drinks\n    } = await fetch(`${url}${searchFilter}`).then(response => response.json());\n\n    if (drinks === null) {\n      global.alert(messageError);\n    } else {\n      setData(drinks.slice(0, maxRecipes));\n    }\n  }, [searchFilter]);\n  useEffect(() => {\n    if (searchFilter) {\n      if (apiFilter === 'Foods') {\n        foodAPI();\n      } else if (apiFilter === 'Drinks') {\n        drinkAPI();\n      }\n    } else if (apiFilter === 'Foods') {\n      fullFoodAPI();\n      foodAPICategory();\n    } else if (apiFilter === 'Drinks') {\n      fullDrinkAPI();\n      drinksAPICategory();\n    }\n  }, [apiFilter, searchFilter, foodAPI, drinkAPI, foodAPICategory, drinksAPICategory, fullDrinkAPI, fullFoodAPI]);\n  const contextValue = {\n    data,\n    setData,\n    email,\n    setEmail,\n    searchFilter,\n    setSearchFilter,\n    apiFilter,\n    setApiFilter,\n    detail,\n    setDetail,\n    category,\n    setCategory,\n    fullFoodAPI,\n    shareMessage,\n    setShareMessage,\n    favStatus,\n    setFavStatus,\n    localData,\n    setLocalData,\n    favoriteRecipes,\n    setFavoriteRecipes\n  };\n  return /*#__PURE__*/_jsxDEV(RecipesContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipesProvider, \"tjmCDwH/MyCaVGwe6ARwtz+ghP8=\");\n\n_c = RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesProvider\");","map":{"version":3,"sources":["/home/devmir/Trybe/portifolio/recipes-app/src/context/RecipesProvider.js"],"names":["React","useCallback","useEffect","useState","PropTypes","RecipesContext","maxRecipes","maxCategory","messageError","RecipesProvider","children","data","setData","searchFilter","setSearchFilter","apiFilter","setApiFilter","detail","setDetail","category","setCategory","email","setEmail","shareMessage","setShareMessage","favStatus","setFavStatus","localData","setLocalData","favoriteRecipes","setFavoriteRecipes","JSON","parse","localStorage","getItem","foodAPICategory","url","meals","fetch","then","response","json","slice","fullFoodAPI","foodAPI","global","alert","drinksAPICategory","drinks","fullDrinkAPI","drinkAPI","contextValue","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\n\nconst maxRecipes = 12;\nconst maxCategory = 5;\nconst messageError = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nfunction RecipesProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState();\n  const [apiFilter, setApiFilter] = useState();\n  const [detail, setDetail] = useState();\n  const [category, setCategory] = useState();\n  const [email, setEmail] = useState('');\n  const [shareMessage, setShareMessage] = useState('');\n  const [favStatus, setFavStatus] = useState('');\n  const [localData, setLocalData] = useState();\n  const [favoriteRecipes, setFavoriteRecipes] = useState(\n    JSON.parse(localStorage.getItem('favoriteRecipes')) || [],\n  );\n\n  // Filtro de botões de FOODS\n  const foodAPICategory = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n    const { meals } = await fetch(url)\n      .then((response) => response.json());\n    setCategory(meals.slice(0, maxCategory));\n  }, []);\n\n  // requisição FOOD primeiro render\n  const fullFoodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const { meals } = await fetch(url)\n      .then((response) => response.json());\n    setData(meals.slice(0, maxRecipes));\n    setLocalData(meals.slice(0, maxRecipes));\n  }, []);\n\n  // requisicao com filtro FOOD\n  const foodAPI = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/';\n    const { meals } = await fetch(`${url}${searchFilter}`)\n      .then((response) => response.json());\n    if (meals === null) {\n      global.alert(messageError);\n    } else {\n      setData(meals.slice(0, maxRecipes));\n    }\n  }, [searchFilter]);\n\n  // Filtro de botões de DRINKS\n  const drinksAPICategory = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n    const { drinks } = await fetch(url)\n      .then((response) => response.json());\n    setCategory(drinks.slice(0, maxCategory));\n  }, []);\n\n  // requisição DRINK primeiro render\n  const fullDrinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    const { drinks } = await fetch(url)\n      .then((response) => response.json());\n    setData(drinks.slice(0, maxRecipes));\n    setLocalData(drinks.slice(0, maxRecipes));\n  }, []);\n\n  // requisicao com filtro DRINK\n  const drinkAPI = useCallback(async () => {\n    const url = 'https://www.thecocktaildb.com/api/json/v1/1/';\n    const { drinks } = await fetch(`${url}${searchFilter}`)\n      .then((response) => response.json());\n    if (drinks === null) {\n      global.alert(messageError);\n    } else {\n      setData(drinks.slice(0, maxRecipes));\n    }\n  }, [searchFilter]);\n\n  useEffect(() => {\n    if (searchFilter) {\n      if (apiFilter === 'Foods') {\n        foodAPI();\n      } else if (apiFilter === 'Drinks') {\n        drinkAPI();\n      }\n    } else if (apiFilter === 'Foods') {\n      fullFoodAPI();\n      foodAPICategory();\n    } else if (apiFilter === 'Drinks') {\n      fullDrinkAPI();\n      drinksAPICategory();\n    }\n  }, [apiFilter, searchFilter, foodAPI, drinkAPI,\n    foodAPICategory, drinksAPICategory, fullDrinkAPI, fullFoodAPI]);\n\n  const contextValue = {\n    data,\n    setData,\n    email,\n    setEmail,\n    searchFilter,\n    setSearchFilter,\n    apiFilter,\n    setApiFilter,\n    detail,\n    setDetail,\n    category,\n    setCategory,\n    fullFoodAPI,\n    shareMessage,\n    setShareMessage,\n    favStatus,\n    setFavStatus,\n    localData,\n    setLocalData,\n    favoriteRecipes,\n    setFavoriteRecipes,\n  };\n\n  return (\n    <RecipesContext.Provider value={ contextValue }>\n      { children }\n    </RecipesContext.Provider>\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesProvider;\n"]},"metadata":{},"sourceType":"module"}