{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/components/DetailsIngredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DetailIngredients() {\n  _s();\n\n  const [detail] = useState('');\n  const ingredients = [];\n\n  for (let index = 1; index <= max; index += 1) {\n    ingredient = `strIngredient${index}`;\n\n    if (detail.ingredient !== null) {\n      ingredients.push(detail.ingredient);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"-\", ingredient.value]\n    }, ingredient, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(DetailIngredients, \"jiIehm6TFNluczvoSf4PvsgwrQ8=\");\n\n_c = DetailIngredients;\nexport default DetailIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailIngredients\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/components/DetailsIngredients.jsx"],"names":["React","useState","DetailIngredients","detail","ingredients","index","max","ingredient","push","map","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,QAAM,CAACC,MAAD,IAAWF,QAAQ,CAAC,EAAD,CAAzB;AACA,QAAMG,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIC,GAA7B,EAAkCD,KAAK,IAAI,CAA3C,EAA8C;AAC5CE,IAAAA,UAAU,GAAI,gBAAeF,KAAM,EAAnC;;AACA,QAAIF,MAAM,CAACI,UAAP,KAAsB,IAA1B,EAAgC;AAC9BH,MAAAA,WAAW,CAACI,IAAZ,CAAiBL,MAAM,CAACI,UAAxB;AACD;AACF;;AAED,sBACE;AAAA,cACGH,WAAW,CAACK,GAAZ,CAAiBF,UAAD,iBACf;AAAA,sBAEIA,UAAU,CAACG,KAFf;AAAA,OAASH,UAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AASD;;GApBQL,iB;;KAAAA,iB;AAsBT,eAAeA,iBAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction DetailIngredients() {\n  const [detail] = useState('');\n  const ingredients = [];\n\n  for (let index = 1; index <= max; index += 1) {\n    ingredient = `strIngredient${index}`;\n    if (detail.ingredient !== null) {\n      ingredients.push(detail.ingredient);\n    }\n  }\n\n  return (\n    <>\n      {ingredients.map((ingredient) => (\n        <p key={ ingredient }>\n          -\n          { ingredient.value }\n        </p>))}\n    </>\n  );\n}\n\nexport default DetailIngredients;\n"]},"metadata":{},"sourceType":"module"}