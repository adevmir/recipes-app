{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/FoodInProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport inProgressStorage from '../helpers/LocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst max = 20;\n\nfunction FoodInProgress() {\n  _s();\n\n  const [detail, setDetail] = useState('');\n  const [shareMessage, setShareMessage] = useState('');\n  const idReceita = useParams();\n  inProgressStorage(true, [idReceita.idReceita]);\n  const foodDetail = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n    const {\n      meals\n    } = await fetch(`${url}${idReceita.idReceita}`).then(response => response.json());\n    setDetail(meals[0]);\n  }, [idReceita]);\n  useEffect(() => {\n    foodDetail();\n    setFavStatus(favIcon([idReceita.idReceita]));\n  }, [foodDetail, idReceita]);\n  const ingredients = [];\n\n  for (let index = 1; index <= max && detail; index += 1) {\n    if (detail[`strIngredient${index}`]) {\n      ingredients.push(`${detail[`strIngredient${index}`]} - ${detail[`strMeasure${index}`]}`);\n    }\n  }\n\n  const localObject = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n  const attFav = async () => {\n    favorite('Meal', detail);\n    setFavStatus(favIcon([idReceita.idReceita]));\n  };\n\n  const check = () => {\n    for (let index = 0; index < ingredients.length && detail; index += 1) {\n      const box = document.getElementById(ingredients[index]);\n\n      if (box.checked) {\n        localObject.meals[idReceita.idReceita][index] = ingredients[index];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(localObject));\n      } else {\n        localObject.meals[idReceita.idReceita][index] = '';\n        localStorage.setItem('inProgressRecipes', JSON.stringify(localObject));\n      }\n    }\n  };\n\n  const ShareFoods = () => {\n    const text = `http://localhost:3000/foods/${idReceita.idReceita}`;\n    copy(text);\n    setShareMessage(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [detail && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: detail.strMealThumb,\n          alt: \"food-icon\",\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            \"data-testid\": \"recipe-title\",\n            children: detail.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => ShareFoods(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareIcon,\n              \"data-testid\": \"share-btn\",\n              alt: \"share-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => attFav(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: favStatus ? BlackHeartIcon : WhiteHeartIcon,\n              \"data-testid\": \"favorite-btn\",\n              alt: \"favorite-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), shareMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Link copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"recipe-category\",\n            children: detail.strCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Ingredientes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `${ingredients.indexOf(ingredient)}-ingredient-step`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: ingredient,\n            onClick: () => check(),\n            defaultChecked: localObject.meals[idReceita.idReceita][index] === ingredient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: ingredient,\n            children: [\"-\", ingredient]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, ingredients.indexOf(ingredient), true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Istructions \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"instructions\",\n          children: detail.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"finish-recipe-btn\",\n        children: \" Finish Recipe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), '']\n  }, void 0, true);\n}\n\n_s(FoodInProgress, \"AlfZ1voaxnvUmG8kh8nQilJ6+K0=\", false, function () {\n  return [useParams];\n});\n\n_c = FoodInProgress;\nexport default FoodInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodInProgress\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/FoodInProgress.jsx"],"names":["React","useCallback","useState","useEffect","useParams","copy","shareIcon","blackHeartIcon","inProgressStorage","max","FoodInProgress","detail","setDetail","shareMessage","setShareMessage","idReceita","foodDetail","url","meals","fetch","then","response","json","setFavStatus","favIcon","ingredients","index","push","localObject","JSON","parse","localStorage","getItem","attFav","favorite","check","length","box","document","getElementById","checked","setItem","stringify","ShareFoods","text","strMealThumb","strMeal","favStatus","BlackHeartIcon","WhiteHeartIcon","strCategory","map","ingredient","indexOf","strInstructions"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport inProgressStorage from '../helpers/LocalStorage';\n\nconst max = 20;\n\nfunction FoodInProgress() {\n  const [detail, setDetail] = useState('');\n  const [shareMessage, setShareMessage] = useState('');\n  const idReceita = useParams();\n  inProgressStorage(true, [idReceita.idReceita]);\n\n  const foodDetail = useCallback(async () => {\n    const url = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\n    const { meals } = await fetch(`${url}${idReceita.idReceita}`)\n      .then((response) => response.json());\n    setDetail(meals[0]);\n  }, [idReceita]);\n\n  useEffect(() => {\n    foodDetail();\n    setFavStatus(favIcon([idReceita.idReceita]));\n  }, [foodDetail, idReceita]);\n\n  const ingredients = [];\n\n  for (let index = 1; index <= max && detail; index += 1) {\n    if (detail[`strIngredient${index}`]) {\n      ingredients.push(\n        `${detail[`strIngredient${index}`]} - ${detail[`strMeasure${index}`]}`,\n      );\n    }\n  }\n\n  const localObject = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const attFav = async () => {\n    favorite('Meal', detail);\n    setFavStatus(favIcon([idReceita.idReceita]));\n  };\n\n  const check = () => {\n    for (let index = 0;\n      index < ingredients.length && detail; index += 1) {\n      const box = document.getElementById(ingredients[index]);\n      if (box.checked) {\n        localObject.meals[idReceita.idReceita][index] = ingredients[index];\n        localStorage.setItem('inProgressRecipes', JSON.stringify(localObject));\n      } else {\n        localObject.meals[idReceita.idReceita][index] = '';\n        localStorage.setItem('inProgressRecipes', JSON.stringify(localObject));\n      }\n    }\n  };\n\n  const ShareFoods = () => {\n    const text = `http://localhost:3000/foods/${idReceita.idReceita}`;\n    copy(text);\n    setShareMessage(true);\n  };\n\n  return (\n    <>\n      { detail && (\n        <>\n          <header>\n            <img\n              src={ detail.strMealThumb }\n              alt=\"food-icon\"\n              data-testid=\"recipe-photo\"\n            />\n          </header>\n          <main>\n            <div>\n              <h1 data-testid=\"recipe-title\">\n                { detail.strMeal }\n              </h1>\n              <button\n                type=\"button\"\n                onClick={ () => ShareFoods() }\n              >\n                <img\n                  src={ shareIcon }\n                  data-testid=\"share-btn\"\n                  alt=\"share-icon\"\n                />\n              </button>\n              <button\n                type=\"button\"\n                onClick={ () => attFav() }\n              >\n                <img\n                  src={ favStatus ? BlackHeartIcon : WhiteHeartIcon }\n                  data-testid=\"favorite-btn\"\n                  alt=\"favorite-icon\"\n                />\n              </button>\n              { shareMessage && (\n                <h1>Link copied!</h1>\n              )}\n              <p data-testid=\"recipe-category\">\n                { detail.strCategory }\n              </p>\n            </div>\n            <h2> Ingredientes </h2>\n            { ingredients.map((ingredient, index) => (\n              <div\n                data-testid={\n                  `${ingredients.indexOf(ingredient)}-ingredient-step`\n                }\n                key={ ingredients.indexOf(ingredient) }\n              >\n                <input\n                  type=\"checkbox\"\n                  id={ ingredient }\n                  onClick={ () => check() }\n                  defaultChecked={\n                    localObject.meals[idReceita.idReceita][index] === ingredient\n                  }\n                />\n                <label htmlFor={ ingredient }>\n                  -\n                  { ingredient }\n                </label>\n              </div>))}\n            <h2> Istructions </h2>\n            <div data-testid=\"instructions\">\n              { detail.strInstructions }\n            </div>\n          </main>\n          <button type=\"button\" data-testid=\"finish-recipe-btn\"> Finish Recipe </button>\n        </>\n      ) }\n      {''}\n\n    </>\n  );\n}\n\nexport default FoodInProgress;\n"]},"metadata":{},"sourceType":"module"}