{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/components/FavoriteCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { unfavoriteFromLocalStorage } from '../helpers/LocalStorage';\nimport RecipesContext from '../context/RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst THREE_SECONDS = 3000;\n\nfunction FavoriteCard(_ref) {\n  _s();\n\n  let {\n    infoRecipe,\n    index\n  } = _ref;\n  const [copiedMsg, setCopiedMsg] = useState(null);\n  const {\n    setFavoriteRecipes\n  } = useContext(RecipesContext);\n\n  const copyUrlToClipboard = (recipeType, recipeId) => {\n    // fonte: https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n    // fonte: https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText\n    navigator.clipboard.writeText(`http://localhost:3000/${recipeType}/${recipeId}`);\n    setCopiedMsg('Link copied!');\n    setTimeout(() => {\n      setCopiedMsg(null);\n    }, THREE_SECONDS);\n  };\n\n  const shareAndFavIcons = (recipeIndex, recipeType, recipeId) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => copyUrlToClipboard(recipeType, recipeId),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": `${recipeIndex}-horizontal-share-btn`,\n        alt: \"share-btn\",\n        src: shareIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setFavoriteRecipes(unfavoriteFromLocalStorage(recipeId)),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": `${recipeIndex}-horizontal-favorite-btn`,\n        alt: \"favorite-btn\",\n        src: blackHeartIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), copiedMsg && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: copiedMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n\n  if (infoRecipe.type === 'food') {\n    const {\n      name,\n      nationality,\n      category,\n      image,\n      id\n    } = infoRecipe;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/foods/${id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"150px\",\n          \"data-testid\": `${index}-horizontal-image`,\n          alt: \"recipe-pic\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-top-text`,\n          children: `${nationality} - ${category}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-name`,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), shareAndFavIcons(index, 'foods', id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (infoRecipe.type === 'drink') {\n    const {\n      name,\n      alcoholicOrNot,\n      image,\n      id\n    } = infoRecipe;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/drinks/${id}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"150px\",\n          \"data-testid\": `${index}-horizontal-image`,\n          alt: \"recipe-pic\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-top-text`,\n          children: alcoholicOrNot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": `${index}-horizontal-name`,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), shareAndFavIcons(index, 'drinks', id)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_s(FavoriteCard, \"5ibuqZGD6b97qwMNGzkMcS7KNtQ=\");\n\n_c = FavoriteCard;\nFavoriteCard.propTypes = {\n  index: PropTypes.number,\n  infoRecipe: PropTypes.shape({\n    name: PropTypes.string,\n    nationality: PropTypes.string,\n    image: PropTypes.string,\n    category: PropTypes.string,\n    id: PropTypes.string,\n    alcoholicOrNot: PropTypes.string\n  })\n}.isRequired;\nexport default FavoriteCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteCard\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/components/FavoriteCard.jsx"],"names":["React","useState","useContext","PropTypes","Link","shareIcon","blackHeartIcon","unfavoriteFromLocalStorage","RecipesContext","THREE_SECONDS","FavoriteCard","infoRecipe","index","copiedMsg","setCopiedMsg","setFavoriteRecipes","copyUrlToClipboard","recipeType","recipeId","navigator","clipboard","writeText","setTimeout","shareAndFavIcons","recipeIndex","type","name","nationality","category","image","id","alcoholicOrNot","propTypes","number","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { unfavoriteFromLocalStorage } from '../helpers/LocalStorage';\nimport RecipesContext from '../context/RecipesContext';\n\nconst THREE_SECONDS = 3000;\n\nfunction FavoriteCard({ infoRecipe, index }) {\n  const [copiedMsg, setCopiedMsg] = useState(null);\n  const { setFavoriteRecipes } = useContext(RecipesContext);\n\n  const copyUrlToClipboard = (recipeType, recipeId) => {\n    // fonte: https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\n    // fonte: https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText\n    navigator.clipboard.writeText(`http://localhost:3000/${recipeType}/${recipeId}`);\n    setCopiedMsg('Link copied!');\n    setTimeout(() => {\n      setCopiedMsg(null);\n    }, THREE_SECONDS);\n  };\n\n  const shareAndFavIcons = (recipeIndex, recipeType, recipeId) => (\n    <div>\n      <button type=\"button\" onClick={ () => copyUrlToClipboard(recipeType, recipeId) }>\n        <img\n          data-testid={ `${recipeIndex}-horizontal-share-btn` }\n          alt=\"share-btn\"\n          src={ shareIcon }\n        />\n      </button>\n      <button\n        type=\"button\"\n        onClick={ () => setFavoriteRecipes(unfavoriteFromLocalStorage(recipeId)) }\n      >\n        <img\n          data-testid={ `${recipeIndex}-horizontal-favorite-btn` }\n          alt=\"favorite-btn\"\n          src={ blackHeartIcon }\n        />\n      </button>\n      {copiedMsg && <span>{copiedMsg}</span>}\n    </div>);\n\n  if (infoRecipe.type === 'food') {\n    const { name, nationality, category, image, id } = infoRecipe;\n    return (\n      <div>\n        <Link to={ `/foods/${id}` }>\n          <img\n            width=\"150px\"\n            data-testid={ `${index}-horizontal-image` }\n            alt=\"recipe-pic\"\n            src={ image }\n          />\n          <p\n            data-testid={ `${index}-horizontal-top-text` }\n          >\n            {`${nationality} - ${category}`}\n          </p>\n          <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n        </Link>\n        {shareAndFavIcons(index, 'foods', id)}\n      </div>\n    );\n  }\n  if (infoRecipe.type === 'drink') {\n    const { name, alcoholicOrNot, image, id } = infoRecipe;\n    return (\n      <div>\n        <Link to={ `/drinks/${id}` }>\n          <img\n            width=\"150px\"\n            data-testid={ `${index}-horizontal-image` }\n            alt=\"recipe-pic\"\n            src={ image }\n          />\n          <p data-testid={ `${index}-horizontal-top-text` }>{alcoholicOrNot}</p>\n          <p data-testid={ `${index}-horizontal-name` }>{name}</p>\n        </Link>\n        {shareAndFavIcons(index, 'drinks', id)}\n      </div>\n    );\n  }\n  return null;\n}\n\nFavoriteCard.propTypes = {\n  index: PropTypes.number,\n  infoRecipe: PropTypes.shape({\n    name: PropTypes.string,\n    nationality: PropTypes.string,\n    image: PropTypes.string,\n    category: PropTypes.string,\n    id: PropTypes.string,\n    alcoholicOrNot: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default FavoriteCard;\n"]},"metadata":{},"sourceType":"module"}