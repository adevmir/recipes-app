{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/Foods.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useCallback, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport '../CSS/ListRecipes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxRecipes = 12;\n\nfunction Food() {\n  _s();\n\n  const pageTitle = 'Foods';\n  const history = useHistory();\n  const {\n    data,\n    setApiFilter,\n    category,\n    setData,\n    localData\n  } = useContext(RecipesContext);\n  const [filterButton, setFilterButton] = useState('');\n  useEffect(() => {\n    if (data.length === 1 && data[0].idMeal !== '52968') {\n      return history.push(`/foods/${data[0].idMeal}`);\n    }\n  }, [data, history]);\n  useEffect(() => {\n    if (!data) {\n      setApiFilter(pageTitle);\n    } else {\n      setApiFilter(pageTitle);\n    }\n  }, [data, setApiFilter]);\n  const filterCategory = useCallback(async categoryName => {\n    if (filterButton === categoryName) {\n      setData(localData);\n    } else {\n      const url = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\n      const {\n        meals\n      } = await fetch(`${url}${categoryName}`).then(response => response.json());\n      setData(meals.slice(0, maxRecipes));\n      setFilterButton(categoryName);\n    }\n  }, [filterButton, localData, setData]);\n\n  const removeFilter = () => {\n    setData(localData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipesBackground\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageTitle: pageTitle,\n      btnSearch: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonContainer\",\n      children: [!category ? undefined : category.map((categoryName, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonCategory\",\n        value: categoryName.strCategory,\n        type: \"button\",\n        \"data-testid\": `${categoryName.strCategory}-category-filter`,\n        onClick: async event => filterCategory(event.target.value),\n        children: categoryName.strCategory\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"removeFilter\",\n        type: \"button\",\n        \"data-testid\": \"All-category-filter\",\n        onClick: () => removeFilter(),\n        children: \"Remove Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerRecipes\",\n      children: !data ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 18\n      }, this) : data.map((recipe, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `foods/${data[index].idMeal}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          index: index,\n          infoRecipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Food, \"ZpXYOPoU8bl8DwthfqBXRnpIfYk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Food;\nexport default Food;\n\nvar _c;\n\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/Foods.jsx"],"names":["React","useContext","useEffect","useCallback","useState","Link","useHistory","Header","RecipesContext","Card","Footer","maxRecipes","Food","pageTitle","history","data","setApiFilter","category","setData","localData","filterButton","setFilterButton","length","idMeal","push","filterCategory","categoryName","url","meals","fetch","then","response","json","slice","removeFilter","undefined","map","index","strCategory","event","target","value","recipe"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useCallback, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport RecipesContext from '../context/RecipesContext';\nimport Card from '../components/Card';\nimport Footer from '../components/Footer';\nimport '../CSS/ListRecipes.css';\n\nconst maxRecipes = 12;\nfunction Food() {\n  const pageTitle = 'Foods';\n  const history = useHistory();\n  const { data, setApiFilter, category,\n    setData, localData } = useContext(RecipesContext);\n  const [filterButton, setFilterButton] = useState('');\n\n  useEffect(() => {\n    if (data.length === 1 && data[0].idMeal !== '52968') {\n      return history.push(`/foods/${data[0].idMeal}`);\n    }\n  }, [data, history]);\n\n  useEffect(() => {\n    if (!data) {\n      setApiFilter(pageTitle);\n    } else {\n      setApiFilter(pageTitle);\n    }\n  }, [data, setApiFilter]);\n\n  const filterCategory = useCallback(async (categoryName) => {\n    if (filterButton === categoryName) {\n      setData(localData);\n    } else {\n      const url = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\n      const { meals } = await fetch(`${url}${categoryName}`)\n        .then((response) => response.json());\n      setData(meals.slice(0, maxRecipes));\n      setFilterButton(categoryName);\n    }\n  }, [filterButton, localData, setData]);\n\n  const removeFilter = () => {\n    setData(localData);\n  };\n\n  return (\n    <div className=\"recipesBackground\">\n      <Header pageTitle={ pageTitle } btnSearch />\n      <div className=\"buttonContainer\">\n        {!category ? undefined\n          : (\n            category.map((categoryName, index) => (\n              <button\n                className=\"buttonCategory\"\n                value={ categoryName.strCategory }\n                key={ index }\n                type=\"button\"\n                data-testid={ `${categoryName.strCategory}-category-filter` }\n                onClick={ async (event) => filterCategory(event.target.value) }\n              >\n                { categoryName.strCategory }\n              </button>\n            ))\n          )}\n        <button\n          className=\"removeFilter\"\n          type=\"button\"\n          data-testid=\"All-category-filter\"\n          onClick={ () => removeFilter() }\n        >\n          Remove Filter\n        </button>\n      </div>\n      <div className=\"containerRecipes\">\n        {!data ? <p>loading</p> : (\n          data.map((recipe, index) => (\n            <Link\n              to={ `foods/${data[index].idMeal}` }\n              key={ index }\n            >\n              <Card\n                index={ index }\n                infoRecipe={ recipe }\n              />\n            </Link>\n          ))\n        )}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Food;\n"]},"metadata":{},"sourceType":"module"}