{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/portifolio/recipes-app/src/pages/ExploreIngredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCard from '../components/IngredientCard';\nimport RecipesContext from '../context/RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEALS_INGREDIENTS_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nconst DRINKS_INGREDIENTS_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nconst TWELVE = 12;\n\nfunction ExploreIngredients() {\n  _s();\n\n  const [ingredients, setIngredients] = useState();\n  const {\n    location: {\n      pathname\n    }\n  } = useHistory();\n  const {\n    setSearchFilter,\n    setApiFilter\n  } = useContext(RecipesContext);\n\n  const getMealIngredients = async () => {\n    const response = await fetch(MEALS_INGREDIENTS_URL);\n    const {\n      meals\n    } = await response.json();\n    setIngredients(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const getDrinksIngredients = async () => {\n    const response = await fetch(DRINKS_INGREDIENTS_URL);\n    const {\n      drinks\n    } = await response.json();\n    setIngredients(drinks.filter((_, index) => index < TWELVE));\n  };\n\n  useEffect(() => {\n    if (pathname.includes('foods')) {\n      getMealIngredients();\n    }\n\n    if (pathname.includes('drinks')) {\n      getDrinksIngredients();\n    }\n  }, [pathname]);\n\n  const handleClick = ingredient => {\n    if (pathname.includes('foods')) {\n      setApiFilter('Foods');\n      setSearchFilter(`filter.php?i=${ingredient.strIngredient}`);\n    }\n\n    if (pathname.includes('drinks')) {\n      setApiFilter('Drinks');\n      setSearchFilter(`filter.php?i=${ingredient.strIngredient1}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageTitle: \"Explore Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), !ingredients ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerRecipes\",\n      children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: pathname.includes('foods') ? '/foods' : '/drinks',\n        onClick: () => handleClick(ingredient),\n        children: /*#__PURE__*/_jsxDEV(IngredientCard, {\n          infoIngredient: ingredient,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExploreIngredients, \"Bj+z/0QFF4BF1ZbcTgeISeZxlQA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ExploreIngredients;\nexport default ExploreIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreIngredients\");","map":{"version":3,"sources":["/home/devmir/Trybe/portifolio/recipes-app/src/pages/ExploreIngredients.jsx"],"names":["React","useState","useEffect","useContext","Link","useHistory","Footer","Header","IngredientCard","RecipesContext","MEALS_INGREDIENTS_URL","DRINKS_INGREDIENTS_URL","TWELVE","ExploreIngredients","ingredients","setIngredients","location","pathname","setSearchFilter","setApiFilter","getMealIngredients","response","fetch","meals","json","filter","_","index","getDrinksIngredients","drinks","includes","handleClick","ingredient","strIngredient","strIngredient1","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCard from '../components/IngredientCard';\nimport RecipesContext from '../context/RecipesContext';\n\nconst MEALS_INGREDIENTS_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nconst DRINKS_INGREDIENTS_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nconst TWELVE = 12;\n\nfunction ExploreIngredients() {\n  const [ingredients, setIngredients] = useState();\n  const { location: { pathname } } = useHistory();\n  const { setSearchFilter, setApiFilter } = useContext(RecipesContext);\n\n  const getMealIngredients = async () => {\n    const response = await fetch(MEALS_INGREDIENTS_URL);\n    const { meals } = await response.json();\n    setIngredients(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const getDrinksIngredients = async () => {\n    const response = await fetch(DRINKS_INGREDIENTS_URL);\n    const { drinks } = await response.json();\n    setIngredients(drinks.filter((_, index) => index < TWELVE));\n  };\n\n  useEffect(() => {\n    if (pathname.includes('foods')) {\n      getMealIngredients();\n    }\n    if (pathname.includes('drinks')) {\n      getDrinksIngredients();\n    }\n  }, [pathname]);\n\n  const handleClick = (ingredient) => {\n    if (pathname.includes('foods')) {\n      setApiFilter('Foods');\n      setSearchFilter(`filter.php?i=${ingredient.strIngredient}`);\n    }\n    if (pathname.includes('drinks')) {\n      setApiFilter('Drinks');\n      setSearchFilter(`filter.php?i=${ingredient.strIngredient1}`);\n    }\n  };\n\n  return (\n    <div className=\"detailsContainer\">\n      <Header pageTitle=\"Explore Ingredients\" />\n      {!ingredients ? <p>loading</p> : (\n        <div className=\"containerRecipes\">\n          {\n            ingredients.map((ingredient, index) => (\n              <Link\n                to={ pathname.includes('foods') ? '/foods' : '/drinks' }\n                key={ index }\n                onClick={ () => handleClick(ingredient) }\n              >\n                <IngredientCard\n                  infoIngredient={ ingredient }\n                  index={ index }\n                />\n              </Link>\n            ))\n          }\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreIngredients;\n"]},"metadata":{},"sourceType":"module"}