{"ast":null,"code":"import _slicedToArray from\"/home/devmir/Trybe/portifolio/recipes-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from'react';import{useHistory}from'react-router-dom';import RecipesContext from'../context/RecipesContext';import logoImg from'../images/Logo_useRecipes.png';import'../CSS/Login.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NUM=6;function Login(){var _useContext=useContext(RecipesContext),email=_useContext.email,setEmail=_useContext.setEmail;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var history=useHistory();var validateEmail=function validateEmail(){return email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);};var validatePassword=function validatePassword(){return password.length>NUM;};var jsonEmail=JSON.stringify({email:email});var handleClick=function handleClick(){localStorage.setItem('mealsToken',1);localStorage.setItem('cocktailsToken',1);localStorage.setItem('user',jsonEmail);history.push('/foods');};return/*#__PURE__*/_jsx(\"div\",{className:\"loginComponent\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"boxContent\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"logoIMG\",src:logoImg,alt:\"iconLogo\"}),/*#__PURE__*/_jsx(\"input\",{className:\"loginInput\",type:\"email\",\"data-testid\":\"email-input\",placeholder:\"E-mail\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"loginInput\",type:\"password\",\"data-testid\":\"password-input\",placeholder:\"Password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"loginBtn\",type:\"button\",\"data-testid\":\"login-submit-btn\",onClick:handleClick,disabled:!(validatePassword()&&validateEmail()),children:\"Enter\"})]})});}export default Login;","map":{"version":3,"sources":["/home/devmir/Trybe/portifolio/recipes-app/src/pages/Login.js"],"names":["React","useContext","useState","useHistory","RecipesContext","logoImg","NUM","Login","email","setEmail","password","setPassword","history","validateEmail","match","validatePassword","length","jsonEmail","JSON","stringify","handleClick","localStorage","setItem","push","e","target","value"],"mappings":"+HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,MAAO,kBAAP,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,CAAZ,CAEA,QAASC,CAAAA,KAAT,EAAiB,CACf,gBAA4BN,UAAU,CAACG,cAAD,CAAtC,CAAQI,KAAR,aAAQA,KAAR,CAAeC,QAAf,aAAeA,QAAf,CACA,cAAgCP,QAAQ,CAAC,EAAD,CAAxC,wCAAOQ,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,OAAO,CAAGT,UAAU,EAA1B,CAEA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAOL,CAAAA,KAAK,CAACM,KAAN,CAAY,4BAAZ,CAAP,EAAtB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,QAAQ,CAACM,MAAT,CAAkBV,GAAxB,EAAzB,CAEA,GAAMW,CAAAA,SAAS,CAAGC,IAAI,CAACC,SAAL,CAAe,CAAEX,KAAK,CAALA,KAAF,CAAf,CAAlB,CAEA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC,CAAnC,EACAD,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAuC,CAAvC,EACAD,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BL,SAA7B,EACAL,OAAO,CAACW,IAAR,CAAa,QAAb,EACD,CALD,CAOA,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,aAAK,SAAS,CAAC,YAAf,wBACE,YACE,SAAS,CAAC,SADZ,CAEE,GAAG,CAAGlB,OAFR,CAGE,GAAG,CAAC,UAHN,EADF,cAME,cACE,SAAS,CAAC,YADZ,CAEE,IAAI,CAAC,OAFP,CAGE,cAAY,aAHd,CAIE,WAAW,CAAC,QAJd,CAKE,KAAK,CAAGG,KALV,CAME,QAAQ,CAAG,kBAACgB,CAAD,QAAOf,CAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EANb,EANF,cAcE,cACE,SAAS,CAAC,YADZ,CAEE,IAAI,CAAC,UAFP,CAGE,cAAY,gBAHd,CAIE,WAAW,CAAC,UAJd,CAKE,KAAK,CAAGhB,QALV,CAME,QAAQ,CAAG,kBAACc,CAAD,QAAOb,CAAAA,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EANb,EAdF,cAsBE,eACE,SAAS,CAAC,UADZ,CAEE,IAAI,CAAC,QAFP,CAGE,cAAY,kBAHd,CAIE,OAAO,CAAGN,WAJZ,CAKE,QAAQ,CAAG,EAAEL,gBAAgB,IAAMF,aAAa,EAArC,CALb,mBAtBF,GADF,EADF,CAoCD,CAED,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport RecipesContext from '../context/RecipesContext';\nimport logoImg from '../images/Logo_useRecipes.png';\nimport '../CSS/Login.css';\n\nconst NUM = 6;\n\nfunction Login() {\n  const { email, setEmail } = useContext(RecipesContext);\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const validateEmail = () => (email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/));\n\n  const validatePassword = () => password.length > NUM;\n\n  const jsonEmail = JSON.stringify({ email });\n\n  const handleClick = () => {\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', jsonEmail);\n    history.push('/foods');\n  };\n\n  return (\n    <div className=\"loginComponent\">\n      <div className=\"boxContent\">\n        <img\n          className=\"logoIMG\"\n          src={ logoImg }\n          alt=\"iconLogo\"\n        />\n        <input\n          className=\"loginInput\"\n          type=\"email\"\n          data-testid=\"email-input\"\n          placeholder=\"E-mail\"\n          value={ email }\n          onChange={ (e) => setEmail(e.target.value) }\n        />\n        <input\n          className=\"loginInput\"\n          type=\"password\"\n          data-testid=\"password-input\"\n          placeholder=\"Password\"\n          value={ password }\n          onChange={ (e) => setPassword(e.target.value) }\n        />\n        <button\n          className=\"loginBtn\"\n          type=\"button\"\n          data-testid=\"login-submit-btn\"\n          onClick={ handleClick }\n          disabled={ !(validatePassword() && validateEmail()) }\n        >\n          Enter\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}