{"ast":null,"code":"var _jsxFileName = \"/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/ExploreIngredients.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCard from '../components/IngredientCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEALS_INGREDIENTS_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nconst DRINKS_INGREDIENTS_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nconst TWELVE = 12;\n\nfunction ExploreIngredients() {\n  _s();\n\n  const [ingredients, setIngredients] = useState();\n  const history = useHistory();\n\n  const getMealIngredients = async () => {\n    const response = await fetch(MEALS_INGREDIENTS_URL);\n    const {\n      meals\n    } = await response.json();\n    setIngredients(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const getDrinksIngredients = async () => {\n    const response = await fetch(DRINKS_INGREDIENTS_URL);\n    const {\n      drinks\n    } = await response.json();\n    setIngredients(drinks.filter((_, index) => index < TWELVE));\n  };\n\n  useEffect(() => {\n    if (history.location.pathname.includes('foods')) {\n      getMealIngredients();\n    }\n\n    if (history.location.pathname.includes('drinks')) {\n      getDrinksIngredients();\n    }\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageTitle: \"Explore Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !ingredients ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this) : ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/foods\",\n      children: /*#__PURE__*/_jsxDEV(IngredientCard, {\n        infoIngredient: ingredient,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExploreIngredients, \"StCNj/NbtfZwJQYkSXMUEdmUSjU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ExploreIngredients;\nexport default ExploreIngredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreIngredients\");","map":{"version":3,"sources":["/home/devmir/Trybe/projetos/front-end/sd-020-b-project-recipes-app/src/pages/ExploreIngredients.jsx"],"names":["React","useState","useEffect","Link","useHistory","Footer","Header","IngredientCard","MEALS_INGREDIENTS_URL","DRINKS_INGREDIENTS_URL","TWELVE","ExploreIngredients","ingredients","setIngredients","history","getMealIngredients","response","fetch","meals","json","filter","_","index","getDrinksIngredients","drinks","location","pathname","includes","map","ingredient"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,qBAAqB,GAAG,yDAA9B;AACA,MAAMC,sBAAsB,GAAG,6DAA/B;AACA,MAAMC,MAAM,GAAG,EAAf;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAMa,OAAO,GAAGV,UAAU,EAA1B;;AAEA,QAAMW,kBAAkB,GAAG,YAAY;AACrC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,qBAAD,CAA5B;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAY,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACAN,IAAAA,cAAc,CAACK,KAAK,CAACE,MAAN,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGZ,MAAnC,CAAD,CAAd;AACD,GAJD;;AAMA,QAAMa,oBAAoB,GAAG,YAAY;AACvC,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACR,sBAAD,CAA5B;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAa,MAAMR,QAAQ,CAACG,IAAT,EAAzB;AACAN,IAAAA,cAAc,CAACW,MAAM,CAACJ,MAAP,CAAc,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGZ,MAApC,CAAD,CAAd;AACD,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,CAACW,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmC,OAAnC,CAAJ,EAAiD;AAC/CZ,MAAAA,kBAAkB;AACnB;;AACD,QAAID,OAAO,CAACW,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmC,QAAnC,CAAJ,EAAkD;AAChDJ,MAAAA,oBAAoB;AACrB;AACF,GAPQ,EAON,CAACT,OAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACF,WAAD,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf,GACCA,WAAW,CAACgB,GAAZ,CAAgB,CAACC,UAAD,EAAaP,KAAb,kBACd,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,QADL;AAAA,6BAIE,QAAC,cAAD;AACE,QAAA,cAAc,EAAGO,UADnB;AAEE,QAAA,KAAK,EAAGP;AAFV;AAAA;AAAA;AAAA;AAAA;AAJF,OAEQA,KAFR;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA5CQX,kB;UAESP,U;;;KAFTO,kB;AA8CT,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport IngredientCard from '../components/IngredientCard';\n\nconst MEALS_INGREDIENTS_URL = 'https://www.themealdb.com/api/json/v1/1/list.php?i=list';\nconst DRINKS_INGREDIENTS_URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list';\nconst TWELVE = 12;\n\nfunction ExploreIngredients() {\n  const [ingredients, setIngredients] = useState();\n  const history = useHistory();\n\n  const getMealIngredients = async () => {\n    const response = await fetch(MEALS_INGREDIENTS_URL);\n    const { meals } = await response.json();\n    setIngredients(meals.filter((_, index) => index < TWELVE));\n  };\n\n  const getDrinksIngredients = async () => {\n    const response = await fetch(DRINKS_INGREDIENTS_URL);\n    const { drinks } = await response.json();\n    setIngredients(drinks.filter((_, index) => index < TWELVE));\n  };\n\n  useEffect(() => {\n    if (history.location.pathname.includes('foods')) {\n      getMealIngredients();\n    }\n    if (history.location.pathname.includes('drinks')) {\n      getDrinksIngredients();\n    }\n  }, [history]);\n\n  return (\n    <div>\n      <Header pageTitle=\"Explore Ingredients\" />\n      {!ingredients ? <p>loading</p> : (\n        ingredients.map((ingredient, index) => (\n          <Link\n            to=\"/foods\"\n            key={ index }\n          >\n            <IngredientCard\n              infoIngredient={ ingredient }\n              index={ index }\n            />\n          </Link>\n        ))\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreIngredients;\n"]},"metadata":{},"sourceType":"module"}